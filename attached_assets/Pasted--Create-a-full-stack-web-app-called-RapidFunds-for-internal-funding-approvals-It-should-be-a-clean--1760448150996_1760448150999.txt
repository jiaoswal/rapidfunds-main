“Create a full-stack web app called RapidFunds for internal funding approvals.
It should be a clean, professional dashboard-style app with organization-based onboarding, approval management, and a visual org chart.

Build it with the following features — explain everything step-by-step and generate code automatically for each part:

🧭 1. Onboarding (Custom per Organization)

On the first visit, users see an onboarding screen where they enter:

Organization Code (orgCode)

Full Name

Email

Role (Requester / Approver / Admin)

Password

If the orgCode exists → user joins that organization.

If not → show a message “Invalid organization code, please contact admin.”

The organization admin can customize onboarding fields later in “Admin Settings”.

After signup, user is taken to the Dashboard.

Add login page with orgCode + email + password.

🧑‍💼 2. Admin Settings (Customizable)

Accessible only by Admins.

Admin can:

Add or edit onboarding fields (e.g., add Department, Designation, or Location).

Manage checklist templates for funding requests.

Manage organization colors, logo, and name.

Generate “Invite links” for new users with roles.

Export organization data to CSV.

All settings save instantly (auto-save).

💰 3. Funding Requests

Any logged-in user can create a funding request with:

Title, Description, Amount, Category, Attachments (files), Checklist items.

Choose Approver from a dropdown (populated from org users).

AI Summary (simulated with placeholder for now): automatically summarizes the request in 3 lines.

Approvers can view, approve, reject, or comment on requests.

Dashboard shows requests by status: Pending / Approved / Rejected.

📊 4. Visual Org Chart (Drag-and-Drop)

Page called “Org Chart” inside Dashboard.

Display a colorful drag-and-drop organizational chart.

Each node shows: name, role, and department.

Admin can:

Add / remove people.

Customize node colors, shapes, and hierarchy.

Save chart layout (saved to database or JSON).

Use a simple visual canvas where nodes can be dragged around to rearrange structure.

⚙️ 5. Roles and Permissions

Roles: Admin, Approver, Requester.

Admin: Full control, can manage users, org chart, and settings.

Approver: Can approve/reject requests assigned to them.

Requester: Can only submit and view own requests.

📱 6. Interface & Design

Use a clean dashboard UI with a sidebar:

Dashboard

Create Request

Approvals

Org Chart

Admin Settings (only visible for admins)

Add a top navbar showing the user’s name and org name.

Use blue/green color theme, modern typography, rounded corners, and smooth animations.

🔒 7. Authentication Logic

Users login using orgCode + email + password.

Auth tokens stored securely in localStorage.

Protect all dashboard routes so only logged-in users can access them.

🧠 8. Backend (Auto-generated by Replit AI)

Use a simple Node.js + Express backend with mock JSON storage first.

Include routes for:

/auth/signup

/auth/login

/requests

/orgchart

/admin/settings

Later connect to PostgreSQL (optional).

🌈 9. Bonus (Optional Later)

Add AI-generated summaries using OpenAI API.

Add file upload preview.

Add analytics on dashboard (e.g., # of approvals, avg time to approve).